{"version":3,"sources":["CommentComponent.js","App.js","reportWebVitals.js","index.js"],"names":["CommentComponent","comments","addComment","deleteComment","handleCheck","useState","showForm","setShowForm","comment","setComment","map","className","onClick","commentID","type","defaultChecked","liked","onChange","e","onSubmit","preventDefault","name","value","target","App","setComments","commIdGen","setCommIdGen","com","push","comm","findIndex","checked","console","log","commentId","newComments","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAkCeA,MAhCf,YAAgF,IAApDC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,YAC7D,EAA+BC,oBAAS,GAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAeC,EAAf,KAOA,OACI,gCACKR,EAASS,KAAI,SAACF,GACX,OAAO,sBAAKG,UAAU,eAAf,UACH,4CAAeH,EAAQA,QACtB,wBAAQI,QAAS,kBAAMT,EAAcK,EAAQK,YAA7C,+BACD,8BACI,2CAAa,uBAAOC,KAAK,WAAWC,eAAgBP,EAAQQ,MAAOC,SAAU,SAACC,GAAD,OAAOd,EAAYc,EAAGV,EAAQK,qBAJzEL,EAAQK,cAUrDP,EAAU,uBAAMa,SAlBJ,SAACD,GACdA,EAAEE,iBACFlB,EAAWM,GACXC,EAAW,KAeA,UACP,4CACA,uBAAOK,KAAK,OAAOO,KAAK,UAAUC,MAAOd,EAASS,SAAU,SAACC,GAAD,OAAOT,EAAWS,EAAEK,OAAOD,UACvF,wBAAQR,KAAK,SAAb,qBACM,KACV,wBAAQF,QAAS,kBAAML,GAAaD,IAApC,6BCoCGkB,MA7Df,WACE,MAAgCnB,mBAAS,CACvC,CACEQ,UAAU,EACVL,QAAS,cACTQ,OAAO,GAET,CACEH,UAAU,EACVL,QAAS,cACTQ,OAAO,KATX,mBAAOf,EAAP,KAAiBwB,EAAjB,KAaA,EAAkCpB,mBAAS,GAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KAiCA,OACE,qBAAKhB,UAAU,MAAf,SACE,gCACE,qBAAKA,UAAU,SAGf,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,CAAkBV,SAAUA,EAAUC,WAtC9C,SAAoBM,GAClB,IAAIoB,EAAM,CACRf,UAAWa,EACXlB,QAASA,EACTQ,OAAO,GAGTf,EAAS4B,KAAKD,GACdD,EAAaD,EAAY,IA8B2CtB,YA3BtE,SAAqBc,EAAGL,GACtB,IAAIiB,EAAO7B,EAAS8B,WAAU,SAACvB,GAC7B,OAAOA,EAAQK,YAAcA,KAG/BZ,EAAS6B,GAAMd,MAAQE,EAAEK,OAAOS,QAEhCP,EAAYxB,GACZgC,QAAQC,IAAIjC,IAmBkFE,cAhBhG,SAAuBgC,GACrB,IAAIC,EAAcnC,EAASoC,QAAO,SAAC7B,GAC/B,OAAOA,EAAQK,YAAcsB,KAEjCF,QAAQC,IAAIC,GACZF,QAAQC,IAAIE,GACZX,EAAYW,cCpCDE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9bd72089.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction CommentComponent({ comments, addComment, deleteComment, handleCheck}) {\r\n    const [showForm,setShowForm] = useState(false);\r\n    const [comment,setComment] = useState('');\r\n    \r\n    const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            addComment(comment);\r\n            setComment('');\r\n    }\r\n    return (\r\n        <div>\r\n            {comments.map((comment) => {\r\n                return <div className='comment-item' key={comment.commentID}>\r\n                    <div>comment: {comment.comment} \r\n                     <button onClick={() => deleteComment(comment.commentID)}>Delete comment</button></div>\r\n                    <div>\r\n                        <label>Liked <input type='checkbox' defaultChecked={comment.liked} onChange={(e) => handleCheck(e, comment.commentID)}/></label>\r\n                    </div>\r\n                    \r\n                </div>\r\n            })\r\n            }\r\n            {showForm? <form onSubmit={handleSubmit}>\r\n                <label>Comment</label>\r\n                <input type='text' name='comment' value={comment} onChange={(e) => setComment(e.target.value)}/>\r\n                <button type='submit'>Post</button>\r\n            </form> : null}\r\n            <button onClick={() => setShowForm(!showForm)}>Add Comment</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentComponent\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport CommentComponent from './CommentComponent';\n\nfunction App() {\n  const [comments, setComments] = useState([\n    {\n      commentID:1,\n      comment: 'good  click',\n      liked: false\n    },\n    {\n      commentID:2,\n      comment: 'great post ',\n      liked: true\n    },\n  ]);\n\n  const [commIdGen, setCommIdGen] = useState(3);\n\n  function addComment(comment){\n    let com = {\n      commentID: commIdGen,\n      comment: comment,\n      liked: false\n    }\n\n    comments.push(com);\n    setCommIdGen(commIdGen + 1);\n  }\n\n  function handleCheck(e, commentID){\n    let comm = comments.findIndex((comment) => {\n      return comment.commentID === commentID;\n    })\n\n    comments[comm].liked = e.target.checked;\n\n    setComments(comments);\n    console.log(comments);\n  }\n\n  function deleteComment(commentId){\n    let newComments = comments.filter((comment) => {\n        return comment.commentID !== commentId;\n    })\n    console.log(commentId);\n    console.log(newComments);\n    setComments(newComments);\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <div className='post'>\n\n        </div>\n        <div className='comments-list'>\n          <CommentComponent comments={comments} addComment={addComment} handleCheck={handleCheck} deleteComment={deleteComment}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}